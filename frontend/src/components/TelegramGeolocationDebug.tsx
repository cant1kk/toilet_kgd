import React, { useState, useEffect } from 'react';
import { telegramService } from '../services/telegram';

interface TelegramGeolocationDebugProps {
  onLocationFound: (lat: number, lon: number) => void;
}

export function TelegramGeolocationDebug({ onLocationFound }: TelegramGeolocationDebugProps) {
  const [debugInfo, setDebugInfo] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(false);

  const addDebugInfo = (info: string) => {
    setDebugInfo(prev => [...prev, `[${new Date().toLocaleTimeString()}] ${info}`]);
  };

  const testGeolocation = async () => {
    setIsLoading(true);
    setDebugInfo([]);
    
    addDebugInfo('–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if (!telegramService.isTelegramApp()) {
      addDebugInfo('‚ùå –ù–µ –≤ Telegram WebApp');
      setIsLoading(false);
      return;
    }
    
    addDebugInfo('‚úÖ Telegram WebApp –æ–±–Ω–∞—Ä—É–∂–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    if (!telegramService.isGeolocationAvailable()) {
      addDebugInfo('‚ùå –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
      setIsLoading(false);
      return;
    }
    
    addDebugInfo('‚úÖ –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTPS
    if (typeof window !== 'undefined' && window.location.protocol === 'https:') {
      addDebugInfo('‚úÖ HTTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
    } else {
      addDebugInfo('‚ö†Ô∏è –ù–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–∏–µ (–Ω–µ HTTPS)');
    }
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
    addDebugInfo('üìç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é...');
    
    try {
      const position = await telegramService.requestGeolocation();
      addDebugInfo(`‚úÖ –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞: ${position.coords.latitude}, ${position.coords.longitude}`);
      addDebugInfo(`üìä –¢–æ—á–Ω–æ—Å—Ç—å: ${position.coords.accuracy}–º`);
      
      onLocationFound(position.coords.latitude, position.coords.longitude);
      
      if (telegramService.isTelegramApp()) {
        telegramService.notificationOccurred('success');
      }
    } catch (error: any) {
      addDebugInfo(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: ${error.message}`);
      
      switch (error.code) {
        case error.PERMISSION_DENIED:
          addDebugInfo('üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
          break;
        case error.POSITION_UNAVAILABLE:
          addDebugInfo('üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
          break;
        case error.TIMEOUT:
          addDebugInfo('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ');
          break;
      }
      
      if (telegramService.isTelegramApp()) {
        telegramService.notificationOccurred('error');
      }
    }
    
    setIsLoading(false);
  };

  const clearDebug = () => {
    setDebugInfo([]);
  };

  return (
    <div className="telegram-geolocation-debug p-4 bg-gray-100 rounded-lg mb-4">
      <h3 className="text-lg font-semibold mb-3">üîç –û—Ç–ª–∞–¥–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ Telegram</h3>
      
      <div className="flex gap-2 mb-3">
        <button
          onClick={testGeolocation}
          disabled={isLoading}
          className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50"
        >
          {isLoading ? 'üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...' : 'üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é'}
        </button>
        
        <button
          onClick={clearDebug}
          className="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600"
        >
          üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å
        </button>
      </div>
      
      {debugInfo.length > 0 && (
        <div className="bg-black text-green-400 p-3 rounded font-mono text-sm max-h-64 overflow-y-auto">
          {debugInfo.map((info, index) => (
            <div key={index}>{info}</div>
          ))}
        </div>
      )}
      
      <div className="mt-3 text-sm text-gray-600">
        <p><strong>–°–æ–≤–µ—Ç—ã:</strong></p>
        <ul className="list-disc list-inside">
          <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ Telegram</li>
          <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –≤–∞—Å –≤–∫–ª—é—á–µ–Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–∞</li>
          <li>–†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è Telegram</li>
          <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ HTTPS</li>
        </ul>
      </div>
    </div>
  );
}