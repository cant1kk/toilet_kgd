{"ast":null,"code":"var _jsxFileName = \"D:\\\\map for cur\\\\toilet-finder-kaliningrad\\\\frontend\\\\src\\\\components\\\\MapPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Modal, Button, Form, Alert, Card, Badge, Spinner } from 'react-bootstrap';\nimport { toiletAPI } from '../services/api';\nimport L from 'leaflet';\nimport { validateAddress, geocodeAddress, formatAddress } from '../services/geocoding';\n\n// Fix for default marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Custom icons for different toilet types\nconst createCustomIcon = type => {\n  const iconConfig = {\n    free: {\n      color: '#28a745',\n      symbol: 'frei'\n    },\n    paid: {\n      color: '#ffc107',\n      symbol: '💰'\n    },\n    purchase_required: {\n      color: '#dc3545',\n      symbol: '🛒'\n    }\n  };\n  const config = iconConfig[type];\n  return L.divIcon({\n    html: `<div style=\"background-color: ${config.color}; width: 30px; height: 30px; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 16px; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\">${config.symbol}</div>`,\n    className: 'custom-toilet-marker',\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Kaliningrad center coordinates\nconst KALININGRAD_CENTER = [54.710, 20.511];\nconst MapPage = () => {\n  _s();\n  const [toilets, setToilets] = useState([]);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [newToilet, setNewToilet] = useState({\n    name: '',\n    address: '',\n    latitude: 0,\n    longitude: 0,\n    type: 'free',\n    price: '',\n    description: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [geocodingLoading, setGeocodingLoading] = useState(false);\n  const [alert, setAlert] = useState({\n    show: false,\n    message: '',\n    variant: 'success'\n  });\n  const [addressError, setAddressError] = useState('');\n  useEffect(() => {\n    loadToilets();\n  }, []);\n  const loadToilets = async () => {\n    try {\n      const data = await toiletAPI.getAll();\n      setToilets(data);\n    } catch (error) {\n      console.error('Error loading toilets:', error);\n      setAlert({\n        show: true,\n        message: 'Ошибка загрузки данных',\n        variant: 'danger'\n      });\n    }\n  };\n  const handleAddressChange = async address => {\n    setNewToilet(prev => ({\n      ...prev,\n      address\n    }));\n\n    // Валидация адреса\n    if (address && !validateAddress(address)) {\n      setAddressError('Введите корректный адрес (улица и номер дома)');\n      return;\n    }\n    setAddressError('');\n\n    // Автоматическое определение координат при вводе адреса\n    if (address && validateAddress(address)) {\n      setGeocodingLoading(true);\n      try {\n        const result = await geocodeAddress(address);\n        if (result) {\n          const lat = parseFloat(result.lat);\n          const lng = parseFloat(result.lon);\n\n          // Проверка, что коораты в пределах Калининграда\n          if (lat >= 54.6 && lat <= 54.8 && lng >= 20.3 && lng <= 20.6) {\n            setNewToilet(prev => ({\n              ...prev,\n              latitude: lat,\n              longitude: lng,\n              address: formatAddress(address)\n            }));\n            setAddressError('');\n          } else {\n            setAddressError('Адрес находится за пределами Калининграда');\n          }\n        } else {\n          setAddressError('Адрес не найден. Проверьте правильность введенных данных');\n        }\n      } catch (error) {\n        setAddressError('Ошибка определения координат. Попробуйте еще раз');\n      } finally {\n        setGeocodingLoading(false);\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Финальная валидация\n    if (!newToilet.name || !newToilet.address) {\n      setAlert({\n        show: true,\n        message: 'Заполните все обязательные поля',\n        variant: 'danger'\n      });\n      return;\n    }\n    if (!validateAddress(newToilet.address)) {\n      setAlert({\n        show: true,\n        message: 'Введите корректный адрес (улица и номер дома)',\n        variant: 'danger'\n      });\n      return;\n    }\n    if (!newToilet.latitude || !newToilet.longitude) {\n      setAlert({\n        show: true,\n        message: 'Не удалось определить координаты. Проверьте адрес',\n        variant: 'danger'\n      });\n      return;\n    }\n    setLoading(true);\n    try {\n      await toiletAPI.submit(newToilet);\n      setAlert({\n        show: true,\n        message: 'Туалет отправлен на модерацию',\n        variant: 'success'\n      });\n      setShowAddModal(false);\n      resetForm();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setAlert({\n        show: true,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Ошибка отправки',\n        variant: 'danger'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetForm = () => {\n    setNewToilet({\n      name: '',\n      address: '',\n      latitude: 0,\n      longitude: 0,\n      type: 'free',\n      price: '',\n      description: ''\n    });\n    setAddressError('');\n  };\n  const getTypeLabel = type => {\n    const labels = {\n      free: 'Бесплатный',\n      paid: 'Платный',\n      purchase_required: 'Только за покупку'\n    };\n    return labels[type];\n  };\n  const getTypeBadgeVariant = type => {\n    const variants = {\n      free: 'success',\n      paid: 'warning',\n      purchase_required: 'danger'\n    };\n    return variants[type];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-0\",\n    children: [alert.show && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alert.variant,\n      onClose: () => setAlert(prev => ({\n        ...prev,\n        show: false\n      })),\n      dismissible: true,\n      className: \"m-3\",\n      children: alert.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center p-3 bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-0\",\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u0430 \\u0442\\u0443\\u0430\\u043B\\u0435\\u0442\\u043E\\u0432 \\u041A\\u0430\\u043B\\u0438\\u043D\\u0438\\u043D\\u0433\\u0440\\u0430\\u0434\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setShowAddModal(true),\n        children: \"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0443\\u0430\\u043B\\u0435\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 'calc(100vh - 140px)'\n      },\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: KALININGRAD_CENTER,\n        zoom: 12,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), toilets.map(toilet => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [toilet.latitude, toilet.longitude],\n          icon: createCustomIcon(toilet.type),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"border-0\",\n              style: {\n                width: '250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  className: \"h6\",\n                  children: toilet.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"small text-muted mb-2\",\n                  children: [\"\\uD83D\\uDCCD \", toilet.address]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: getTypeBadgeVariant(toilet.type),\n                  className: \"mb-2\",\n                  children: getTypeLabel(toilet.type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this), toilet.price && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this), \" \", toilet.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this), toilet.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small text-muted\",\n                  children: toilet.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, toilet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAddModal,\n      onHide: () => setShowAddModal(false),\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0442\\u0443\\u0430\\u043B\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), \" \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 \\\"\\u0443\\u043B. \\u041B\\u0435\\u043D\\u0438\\u043D\\u0441\\u043A\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0441\\u043F\\u0435\\u043A\\u0442 30\\\" \\u0438\\u043B\\u0438 \\\"\\u041A\\u0438\\u0440\\u043E\\u0432\\u0430 15\\\". \\u041A\\u043Eordin\\u0430\\u0442\\u044B \\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u044F\\u0442\\u0441\\u044F \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              required: true,\n              value: newToilet.name,\n              onChange: e => setNewToilet(prev => ({\n                ...prev,\n                name: e.target.value\n              })),\n              placeholder: \"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: \\u0422\\u0443\\u0430\\u043B\\u0435\\u0442 \\u0432 \\u0422\\u0426\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0410\\u0434\\u0440\\u0435\\u0441 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"position-relative\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                required: true,\n                value: newToilet.address,\n                onChange: e => handleAddressChange(e.target.value),\n                placeholder: \"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: \\u0443\\u043B. \\u041B\\u0435\\u043D\\u0438\\u043D\\u0441\\u043A\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0441\\u043F\\u0435\\u043A\\u0442 30\",\n                isInvalid: !!addressError,\n                disabled: geocodingLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), geocodingLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"position-absolute\",\n                style: {\n                  right: '10px',\n                  top: '8px'\n                },\n                children: /*#__PURE__*/_jsxDEV(Spinner, {\n                  animation: \"border\",\n                  size: \"sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: addressError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0443\\u043B\\u0438\\u0446\\u0443 \\u0438 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0434\\u043E\\u043C\\u0430. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: \\\"\\u041A\\u0438\\u0440\\u043E\\u0432\\u0430 15\\\" \\u0438\\u043B\\u0438 \\\"\\u0443\\u043B. \\u041B\\u0435\\u043D\\u0438\\u043D\\u0430 30\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), newToilet.latitude && newToilet.longitude && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            className: \"small\",\n            children: [\"\\u2705 \\u041A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B \\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u044B: \", newToilet.latitude.toFixed(6), \", \", newToilet.longitude.toFixed(6)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0422\\u0438\\u043F *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              required: true,\n              value: newToilet.type,\n              onChange: e => setNewToilet(prev => ({\n                ...prev,\n                type: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"free\",\n                children: \"\\uD83C\\uDD93 \\u0411\\u0435\\u0441\\u043F\\u043B\\u0430\\u0442\\u043D\\u044B\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"paid\",\n                children: \"\\uD83D\\uDCB0 \\u041F\\u043B\\u0430\\u0442\\u043D\\u044B\\u0439\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"purchase_required\",\n                children: \"\\uD83D\\uDED2 \\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0437\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0443\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), (newToilet.type === 'paid' || newToilet.type === 'purchase_required') && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C / \\u0423\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: newToilet.price,\n              onChange: e => setNewToilet(prev => ({\n                ...prev,\n                price: e.target.value\n              })),\n              placeholder: \"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: 50 \\u0440\\u0443\\u0431\\u043B\\u0435\\u0439 / \\u041F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0430 \\u043E\\u0442 100 \\u0440\\u0443\\u0431\\u043B\\u0435\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              value: newToilet.description,\n              onChange: e => setNewToilet(prev => ({\n                ...prev,\n                description: e.target.value\n              })),\n              placeholder: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F (\\u0447\\u0430\\u0441\\u044B \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B, \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E\\u0441\\u0442\\u044C \\u0438 \\u0442.\\u0434.)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setShowAddModal(false),\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: loading || geocodingLoading || !newToilet.latitude || !!addressError,\n            children: loading ? 'Отправка...' : 'Отправить на модерацию'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"Zr9d+v1UAzyS7yiYYHxlAQxUQks=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Modal","Button","Form","Alert","Card","Badge","Spinner","toiletAPI","L","validateAddress","geocodeAddress","formatAddress","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","createCustomIcon","type","iconConfig","free","color","symbol","paid","purchase_required","config","divIcon","html","className","iconSize","iconAnchor","popupAnchor","KALININGRAD_CENTER","MapPage","_s","toilets","setToilets","showAddModal","setShowAddModal","newToilet","setNewToilet","name","address","latitude","longitude","price","description","loading","setLoading","geocodingLoading","setGeocodingLoading","alert","setAlert","show","message","variant","addressError","setAddressError","loadToilets","data","getAll","error","console","handleAddressChange","prev","result","lat","parseFloat","lng","lon","handleSubmit","e","preventDefault","submit","resetForm","_error$response","_error$response$data","response","getTypeLabel","labels","getTypeBadgeVariant","variants","children","onClose","dismissible","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","height","center","zoom","width","attribution","url","map","toilet","position","icon","Body","Title","Text","bg","id","onHide","size","Header","closeButton","onSubmit","Group","Label","Control","required","value","onChange","target","placeholder","isInvalid","disabled","right","top","animation","Feedback","toFixed","Select","as","rows","Footer","_c","$RefreshReg$"],"sources":["D:/map for cur/toilet-finder-kaliningrad/frontend/src/components/MapPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Modal, Button, Form, Alert, Card, Badge, Spinner } from 'react-bootstrap';\nimport { Toilet, ToiletFormData } from '../types';\nimport { toiletAPI } from '../services/api';\nimport L from 'leaflet';\nimport { validateAddress, geocodeAddress, formatAddress } from '../services/geocoding';\n\n// Fix for default marker icons\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Custom icons for different toilet types\nconst createCustomIcon = (type: Toilet['type']) => {\n  const iconConfig = {\n    free: { color: '#28a745', symbol: 'frei' },\n    paid: { color: '#ffc107', symbol: '💰' },\n    purchase_required: { color: '#dc3545', symbol: '🛒' }\n  };\n\n  const config = iconConfig[type];\n  \n  return L.divIcon({\n    html: `<div style=\"background-color: ${config.color}; width: 30px; height: 30px; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 16px; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\">${config.symbol}</div>`,\n    className: 'custom-toilet-marker',\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Kaliningrad center coordinates\nconst KALININGRAD_CENTER = [54.710, 20.511] as [number, number];\n\nconst MapPage: React.FC = () => {\n  const [toilets, setToilets] = useState<Toilet[]>([]);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [newToilet, setNewToilet] = useState<ToiletFormData>({\n    name: '',\n    address: '',\n    latitude: 0,\n    longitude: 0,\n    type: 'free',\n    price: '',\n    description: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [geocodingLoading, setGeocodingLoading] = useState(false);\n  const [alert, setAlert] = useState<{ show: boolean; message: string; variant: string }>({\n    show: false,\n    message: '',\n    variant: 'success'\n  });\n  const [addressError, setAddressError] = useState('');\n\n  useEffect(() => {\n    loadToilets();\n  }, []);\n\n  const loadToilets = async () => {\n    try {\n      const data = await toiletAPI.getAll();\n      setToilets(data);\n    } catch (error) {\n      console.error('Error loading toilets:', error);\n      setAlert({\n        show: true,\n        message: 'Ошибка загрузки данных',\n        variant: 'danger'\n      });\n    }\n  };\n\n  const handleAddressChange = async (address: string) => {\n    setNewToilet(prev => ({ ...prev, address }));\n    \n    // Валидация адреса\n    if (address && !validateAddress(address)) {\n      setAddressError('Введите корректный адрес (улица и номер дома)');\n      return;\n    }\n    \n    setAddressError('');\n    \n    // Автоматическое определение координат при вводе адреса\n    if (address && validateAddress(address)) {\n      setGeocodingLoading(true);\n      try {\n        const result = await geocodeAddress(address);\n        if (result) {\n          const lat = parseFloat(result.lat);\n          const lng = parseFloat(result.lon);\n          \n          // Проверка, что коораты в пределах Калининграда\n          if (lat >= 54.6 && lat <= 54.8 && lng >= 20.3 && lng <= 20.6) {\n            setNewToilet(prev => ({\n              ...prev,\n              latitude: lat,\n              longitude: lng,\n              address: formatAddress(address)\n            }));\n            setAddressError('');\n          } else {\n            setAddressError('Адрес находится за пределами Калининграда');\n          }\n        } else {\n          setAddressError('Адрес не найден. Проверьте правильность введенных данных');\n        }\n      } catch (error) {\n        setAddressError('Ошибка определения координат. Попробуйте еще раз');\n      } finally {\n        setGeocodingLoading(false);\n      }\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Финальная валидация\n    if (!newToilet.name || !newToilet.address) {\n      setAlert({\n        show: true,\n        message: 'Заполните все обязательные поля',\n        variant: 'danger'\n      });\n      return;\n    }\n\n    if (!validateAddress(newToilet.address)) {\n      setAlert({\n        show: true,\n        message: 'Введите корректный адрес (улица и номер дома)',\n        variant: 'danger'\n      });\n      return;\n    }\n\n    if (!newToilet.latitude || !newToilet.longitude) {\n      setAlert({\n        show: true,\n        message: 'Не удалось определить координаты. Проверьте адрес',\n        variant: 'danger'\n      });\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await toiletAPI.submit(newToilet);\n      setAlert({\n        show: true,\n        message: 'Туалет отправлен на модерацию',\n        variant: 'success'\n      });\n      setShowAddModal(false);\n      resetForm();\n    } catch (error: any) {\n      setAlert({\n        show: true,\n        message: error.response?.data?.error || 'Ошибка отправки',\n        variant: 'danger'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetForm = () => {\n    setNewToilet({\n      name: '',\n      address: '',\n      latitude: 0,\n      longitude: 0,\n      type: 'free',\n      price: '',\n      description: ''\n    });\n    setAddressError('');\n  };\n\n  const getTypeLabel = (type: Toilet['type']) => {\n    const labels = {\n      free: 'Бесплатный',\n      paid: 'Платный',\n      purchase_required: 'Только за покупку'\n    };\n    return labels[type];\n  };\n\n  const getTypeBadgeVariant = (type: Toilet['type']) => {\n    const variants = {\n      free: 'success',\n      paid: 'warning',\n      purchase_required: 'danger'\n    };\n    return variants[type];\n  };\n\n  return (\n    <div className=\"container-fluid p-0\">\n      {alert.show && (\n        <Alert \n          variant={alert.variant} \n          onClose={() => setAlert(prev => ({ ...prev, show: false }))}\n          dismissible\n          className=\"m-3\"\n        >\n          {alert.message}\n        </Alert>\n      )}\n\n      <div className=\"d-flex justify-content-between align-items-center p-3 bg-light\">\n        <h1 className=\"h3 mb-0\">Карта туалетов Калининграда</h1>\n        <Button \n          variant=\"primary\" \n          onClick={() => setShowAddModal(true)}\n        >\n          + Добавить туалет\n        </Button>\n      </div>\n\n      <div style={{ height: 'calc(100vh - 140px)' }}>\n        <MapContainer \n          center={KALININGRAD_CENTER} \n          zoom={12} \n          style={{ height: '100%', width: '100%' }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          {toilets.map((toilet) => (\n            <Marker \n              key={toilet.id} \n              position={[toilet.latitude, toilet.longitude]}\n              icon={createCustomIcon(toilet.type)}\n            >\n              <Popup>\n                <Card className=\"border-0\" style={{ width: '250px' }}>\n                  <Card.Body>\n                    <Card.Title className=\"h6\">{toilet.name}</Card.Title>\n                    <Card.Text className=\"small text-muted mb-2\">\n                      📍 {toilet.address}\n                    </Card.Text>\n                    <Badge bg={getTypeBadgeVariant(toilet.type)} className=\"mb-2\">\n                      {getTypeLabel(toilet.type)}\n                    </Badge>\n                    {toilet.price && (\n                      <div className=\"small mb-2\">\n                        <strong>Стоимость:</strong> {toilet.price}\n                      </div>\n                    )}\n                    {toilet.description && (\n                      <div className=\"small text-muted\">\n                        {toilet.description}\n                      </div>\n                    )}\n                  </Card.Body>\n                </Card>\n              </Popup>\n            </Marker>\n          ))}\n        </MapContainer>\n      </div>\n\n      <Modal show={showAddModal} onHide={() => setShowAddModal(false)} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Добавить новый туалет</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleSubmit}>\n          <Modal.Body>\n            <Alert variant=\"info\">\n              <strong>Инструкция:</strong> Введите адрес в формате \"ул. Ленинский проспект 30\" или \"Кирова 15\". \n              Коordinаты определятся автоматически.\n            </Alert>\n            \n            <Form.Group className=\"mb-3\">\n              <Form.Label>Название *</Form.Label>\n              <Form.Control\n                type=\"text\"\n                required\n                value={newToilet.name}\n                onChange={(e) => setNewToilet(prev => ({ ...prev, name: e.target.value }))}\n                placeholder=\"Например: Туалет в ТЦ\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Адрес *</Form.Label>\n              <div className=\"position-relative\">\n                <Form.Control\n                  type=\"text\"\n                  required\n                  value={newToilet.address}\n                  onChange={(e) => handleAddressChange(e.target.value)}\n                  placeholder=\"Например: ул. Ленинский проспект 30\"\n                  isInvalid={!!addressError}\n                  disabled={geocodingLoading}\n                />\n                {geocodingLoading && (\n                  <div className=\"position-absolute\" style={{ right: '10px', top: '8px' }}>\n                    <Spinner animation=\"border\" size=\"sm\" />\n                  </div>\n                )}\n                <Form.Control.Feedback type=\"invalid\">\n                  {addressError}\n                </Form.Control.Feedback>\n                <Form.Text className=\"text-muted\">\n                  Укажите улицу и номер дома. Например: \"Кирова 15\" или \"ул. Ленина 30\"\n                </Form.Text>\n              </div>\n            </Form.Group>\n\n            {newToilet.latitude && newToilet.longitude && (\n              <Alert variant=\"success\" className=\"small\">\n                ✅ Координаты определены: {newToilet.latitude.toFixed(6)}, {newToilet.longitude.toFixed(6)}\n              </Alert>\n            )}\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Тип *</Form.Label>\n              <Form.Select\n                required\n                value={newToilet.type}\n                onChange={(e) => setNewToilet(prev => ({ \n                  ...prev, \n                  type: e.target.value as Toilet['type'] \n                }))}\n              >\n                <option value=\"free\">🆓 Бесплатный</option>\n                <option value=\"paid\">💰 Платный</option>\n                <option value=\"purchase_required\">🛒 Только за покупку</option>\n              </Form.Select>\n            </Form.Group>\n\n            {(newToilet.type === 'paid' || newToilet.type === 'purchase_required') && (\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Стоимость / Условия</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={newToilet.price}\n                  onChange={(e) => setNewToilet(prev => ({ ...prev, price: e.target.value }))}\n                  placeholder=\"Например: 50 рублей / Покупка от 100 рублей\"\n                />\n              </Form.Group>\n            )}\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Описание</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                value={newToilet.description}\n                onChange={(e) => setNewToilet(prev => ({ ...prev, description: e.target.value }))}\n                placeholder=\"Дополнительная информация (часы работы, доступность и т.д.)\"\n              />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowAddModal(false)}>\n              Отмена\n            </Button>\n            <Button \n              variant=\"primary\" \n              type=\"submit\" \n              disabled={loading || geocodingLoading || !newToilet.latitude || !!addressError}\n            >\n              {loading ? 'Отправка...' : 'Отправить на модерацию'}\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}