{"ast":null,"code":"var _jsxFileName = \"d:\\\\map for cur\\\\toilet-finder-kaliningrad\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport './styles/mobile.css';\nimport MapPage from './components/MapPage';\nimport AdminPanel from './components/AdminPanel';\nimport Navigation from './components/Navigation';\nimport { GeolocationHandler } from './components/GeolocationHandler';\nimport { telegramService } from './services/telegram';\n\n// Объявление типов для Telegram WebApp API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [isTelegram, setIsTelegram] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Инициализация Telegram WebApp\n    const initializeTelegram = async () => {\n      if (telegramService.isTelegramApp()) {\n        telegramService.init();\n        setIsTelegram(true);\n\n        // Получаем данные пользователя Telegram\n        const telegramUser = await telegramService.getUser();\n        if (telegramUser) {\n          console.log('Telegram user:', telegramUser);\n        }\n\n        // Управление кнопкой \"Назад\"\n        telegramService.setBackButtonCallback(() => {\n          if (window.history.length > 1) {\n            navigate(-1);\n          } else {\n            telegramService.close();\n          }\n        });\n\n        // Показываем/скрываем кнопку \"Назад\"\n        if (location.pathname !== '/') {\n          telegramService.showBackButton();\n        } else {\n          telegramService.hideBackButton();\n        }\n      }\n      setIsInitialized(true);\n    };\n    initializeTelegram();\n  }, []);\n  useEffect(() => {\n    if (isInitialized && isTelegram) {\n      // Обновляем состояние кнопки \"Назад\" при изменении маршрута\n      if (location.pathname !== '/') {\n        telegramService.showBackButton();\n      } else {\n        telegramService.hideBackButton();\n      }\n    }\n  }, [location.pathname, isInitialized, isTelegram]);\n  const handleLocationUpdate = (lat, lon) => {\n    setUserLocation({\n      lat,\n      lon\n    });\n  };\n  if (!isInitialized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isTelegram ? 'telegram-app' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(GeolocationHandler, {\n      onLocationUpdate: handleLocationUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), !isTelegram && /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MapPage, {\n          initialUserLocation: userLocation,\n          isTelegram: isTelegram\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(AdminPanel, {\n          isTelegram: isTelegram\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n// Определяем компонент роутера в зависимости от среды\n_s(AppContent, \"AaJsh9OHuTWnV64E6xlqla3sMfk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AppContent;\nconst AppWrapper = () => {\n  var _window$Telegram;\n  const isTelegram = typeof window !== 'undefined' && ((_window$Telegram = window.Telegram) === null || _window$Telegram === void 0 ? void 0 : _window$Telegram.WebApp) !== undefined;\n  if (isTelegram) {\n    // Для Telegram используем HashRouter\n    const {\n      HashRouter\n    } = require('react-router-dom');\n    return /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  } else {\n    // Для обычного браузера используем BrowserRouter\n    const {\n      BrowserRouter\n    } = require('react-router-dom');\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c2 = AppWrapper;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AppWrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 10\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"AppWrapper\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","useLocation","useNavigate","MapPage","AdminPanel","Navigation","GeolocationHandler","telegramService","jsxDEV","_jsxDEV","AppContent","_s","userLocation","setUserLocation","isTelegram","setIsTelegram","isInitialized","setIsInitialized","location","navigate","initializeTelegram","isTelegramApp","init","telegramUser","getUser","console","log","setBackButtonCallback","window","history","length","close","pathname","showBackButton","hideBackButton","handleLocationUpdate","lat","lon","className","style","height","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onLocationUpdate","path","element","initialUserLocation","_c","AppWrapper","_window$Telegram","Telegram","WebApp","undefined","HashRouter","require","BrowserRouter","_c2","App","_c3","$RefreshReg$"],"sources":["d:/map for cur/toilet-finder-kaliningrad/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport './styles/mobile.css';\nimport MapPage from './components/MapPage';\nimport AdminPanel from './components/AdminPanel';\nimport Navigation from './components/Navigation';\nimport { GeolocationHandler } from './components/GeolocationHandler';\nimport { telegramService } from './services/telegram';\n\n// Объявление типов для Telegram WebApp API\ndeclare global {\n  interface Window {\n    Telegram?: {\n      WebApp?: any;\n    };\n  }\n}\n\nfunction AppContent() {\n  const [userLocation, setUserLocation] = useState<{ lat: number; lon: number } | null>(null);\n  const [isTelegram, setIsTelegram] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Инициализация Telegram WebApp\n    const initializeTelegram = async () => {\n      if (telegramService.isTelegramApp()) {\n        telegramService.init();\n        setIsTelegram(true);\n        \n        // Получаем данные пользователя Telegram\n        const telegramUser = await telegramService.getUser();\n        if (telegramUser) {\n          console.log('Telegram user:', telegramUser);\n        }\n        \n        // Управление кнопкой \"Назад\"\n        telegramService.setBackButtonCallback(() => {\n          if (window.history.length > 1) {\n            navigate(-1);\n          } else {\n            telegramService.close();\n          }\n        });\n\n        // Показываем/скрываем кнопку \"Назад\"\n        if (location.pathname !== '/') {\n          telegramService.showBackButton();\n        } else {\n          telegramService.hideBackButton();\n        }\n      }\n      setIsInitialized(true);\n    };\n\n    initializeTelegram();\n  }, []);\n\n  useEffect(() => {\n    if (isInitialized && isTelegram) {\n      // Обновляем состояние кнопки \"Назад\" при изменении маршрута\n      if (location.pathname !== '/') {\n        telegramService.showBackButton();\n      } else {\n        telegramService.hideBackButton();\n      }\n    }\n  }, [location.pathname, isInitialized, isTelegram]);\n\n  const handleLocationUpdate = (lat: number, lon: number) => {\n    setUserLocation({ lat, lon });\n  };\n\n  if (!isInitialized) {\n    return (\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"visually-hidden\">Загрузка...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`App ${isTelegram ? 'telegram-app' : ''}`}>\n      <GeolocationHandler onLocationUpdate={handleLocationUpdate} />\n      {!isTelegram && <Navigation />}\n      <Routes>\n        <Route \n          path=\"/\" \n          element={<MapPage initialUserLocation={userLocation} isTelegram={isTelegram} />} \n        />\n        <Route \n          path=\"/admin\" \n          element={<AdminPanel isTelegram={isTelegram} />} \n        />\n      </Routes>\n    </div>\n  );\n}\n\n// Определяем компонент роутера в зависимости от среды\nconst AppWrapper = () => {\n  const isTelegram = typeof window !== 'undefined' && window.Telegram?.WebApp !== undefined;\n  \n  if (isTelegram) {\n    // Для Telegram используем HashRouter\n    const { HashRouter } = require('react-router-dom');\n    return (\n      <HashRouter>\n        <AppContent />\n      </HashRouter>\n    );\n  } else {\n    // Для обычного браузера используем BrowserRouter\n    const { BrowserRouter } = require('react-router-dom');\n    return (\n      <BrowserRouter>\n        <AppContent />\n      </BrowserRouter>\n    );\n  }\n};\n\nfunction App() {\n  return <AppWrapper />;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}