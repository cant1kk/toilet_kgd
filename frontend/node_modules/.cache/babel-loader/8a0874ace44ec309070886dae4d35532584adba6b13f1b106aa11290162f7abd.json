{"ast":null,"code":"import axios from'axios';import{telegramService}from'./telegram';// Базовый URL API\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Создаем экземпляр axios с настройками\nconst api=axios.create({baseURL:API_BASE_URL,timeout:10000,headers:{'Content-Type':'application/json'}});// Перехватчик для добавления токена авторизации\napi.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}// Если мы в Telegram, добавляем initData\nif(telegramService.isTelegramApp()){var _window$Telegram,_window$Telegram$WebA;const initData=(_window$Telegram=window.Telegram)===null||_window$Telegram===void 0?void 0:(_window$Telegram$WebA=_window$Telegram.WebApp)===null||_window$Telegram$WebA===void 0?void 0:_window$Telegram$WebA.initData;if(initData){config.headers['X-Telegram-Init-Data']=initData;}}return config;},error=>{return Promise.reject(error);});// Перехватчик для обработки ошибок\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Токен истек, удаляем его\nlocalStorage.removeItem('authToken');localStorage.removeItem('user');// Если в Telegram, можно показать сообщение и закрыть приложение\nif(telegramService.isTelegramApp()){telegramService.showAlert('Сессия истекла. Пожалуйста, перезапустите приложение.');}}return Promise.reject(error);});// Интерфейсы\n// API функции\nexport const toiletAPI={// Получение всех туалетов\ngetAll:async()=>{const response=await api.get('/toilets');return response.data;},// Получение утвержденных туалетов\ngetApproved:async()=>{const response=await api.get('/toilets/approved');return response.data;},// Добавление нового туалета\nadd:async toilet=>{const response=await api.post('/toilets',toilet);return response.data;},// Обновление туалета\nupdate:async(id,toilet)=>{const response=await api.put(\"/toilets/\".concat(id),toilet);return response.data;},// Удаление туалета\ndelete:async id=>{await api.delete(\"/toilets/\".concat(id));},// Поиск близлежащих туалетов\nfindNearby:async function(lat,lon){let radius=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5000;const response=await api.get(\"/toilets/nearby?lat=\".concat(lat,\"&lon=\").concat(lon,\"&radius=\").concat(radius));return response.data;}};// API аутентификации\nexport const authAPI={// Вход администратора\nlogin:async(username,password)=>{const response=await api.post('/auth/login',{username,password});return response.data;},// Регистрация администратора\nregister:async(username,password)=>{const response=await api.post('/auth/register',{username,password});return response.data;},// Telegram аутентификация\ntelegramAuth:async()=>{var _window$Telegram2,_window$Telegram2$Web;if(!telegramService.isTelegramApp()){throw new Error('Not in Telegram WebApp');}const initData=(_window$Telegram2=window.Telegram)===null||_window$Telegram2===void 0?void 0:(_window$Telegram2$Web=_window$Telegram2.WebApp)===null||_window$Telegram2$Web===void 0?void 0:_window$Telegram2$Web.initData;if(!initData){throw new Error('No init data available');}const response=await api.post('/telegram/auth',{initData});return response.data;},// Получение информации о текущем пользователе\ngetCurrentUser:async()=>{const response=await api.get('/telegram/me');return response.data;}};// API администратора\nexport const adminAPI={// Получение статистики\ngetStats:async()=>{const response=await api.get('/admin/stats');return response.data;},// Получение всех туалетов (включая неутвержденные)\ngetAllToilets:async()=>{const response=await api.get('/admin/toilets');return response.data;},// Утверждение туалета\napproveToilet:async id=>{const response=await api.put(\"/admin/toilets/\".concat(id,\"/approve\"));return response.data;},// Отклонение туалета\nrejectToilet:async id=>{await api.delete(\"/admin/toilets/\".concat(id));}};export default api;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}