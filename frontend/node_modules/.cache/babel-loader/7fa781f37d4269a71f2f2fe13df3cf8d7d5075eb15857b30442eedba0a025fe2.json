{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Routes,Route,useLocation,useNavigate}from'react-router-dom';import'bootstrap/dist/css/bootstrap.min.css';import'leaflet/dist/leaflet.css';import'./App.css';import'./styles/mobile.css';import MapPage from'./components/MapPage';import AdminPanel from'./components/AdminPanel';import Navigation from'./components/Navigation';import{GeolocationHandler}from'./components/GeolocationHandler';import{telegramService}from'./services/telegram';// Объявление типов для Telegram WebApp API\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AppContent(){const[userLocation,setUserLocation]=useState(null);const[isTelegram,setIsTelegram]=useState(false);const[isInitialized,setIsInitialized]=useState(false);const location=useLocation();const navigate=useNavigate();useEffect(()=>{// Инициализация Telegram WebApp\nconst initializeTelegram=async()=>{if(telegramService.isTelegramApp()){telegramService.init();setIsTelegram(true);// Получаем данные пользователя Telegram\nconst telegramUser=await telegramService.getUser();if(telegramUser){console.log('Telegram user:',telegramUser);}// Управление кнопкой \"Назад\"\ntelegramService.setBackButtonCallback(()=>{if(window.history.length>1){navigate(-1);}else{telegramService.close();}});// Показываем/скрываем кнопку \"Назад\"\nif(location.pathname!=='/'){telegramService.showBackButton();}else{telegramService.hideBackButton();}}setIsInitialized(true);};initializeTelegram();},[]);useEffect(()=>{if(isInitialized&&isTelegram){// Обновляем состояние кнопки \"Назад\" при изменении маршрута\nif(location.pathname!=='/'){telegramService.showBackButton();}else{telegramService.hideBackButton();}}},[location.pathname,isInitialized,isTelegram]);const handleLocationUpdate=(lat,lon)=>{setUserLocation({lat,lon});};if(!isInitialized){return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center align-items-center\",style:{height:'100vh'},children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"})})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(isTelegram?'telegram-app':''),children:[/*#__PURE__*/_jsx(GeolocationHandler,{onLocationUpdate:handleLocationUpdate}),!isTelegram&&/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(MapPage,{initialUserLocation:userLocation,isTelegram:isTelegram})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(AdminPanel,{isTelegram:isTelegram})})]})]});}// Определяем компонент роутера в зависимости от среды\nconst AppWrapper=()=>{var _window$Telegram;const isTelegram=typeof window!=='undefined'&&((_window$Telegram=window.Telegram)===null||_window$Telegram===void 0?void 0:_window$Telegram.WebApp)!==undefined;if(isTelegram){// Для Telegram используем HashRouter\nconst{HashRouter}=require('react-router-dom');return/*#__PURE__*/_jsx(HashRouter,{children:/*#__PURE__*/_jsx(AppContent,{})});}else{// Для обычного браузера используем BrowserRouter\nconst{BrowserRouter}=require('react-router-dom');return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(AppContent,{})});}};function App(){return/*#__PURE__*/_jsx(AppWrapper,{});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","useLocation","useNavigate","MapPage","AdminPanel","Navigation","GeolocationHandler","telegramService","jsx","_jsx","jsxs","_jsxs","AppContent","userLocation","setUserLocation","isTelegram","setIsTelegram","isInitialized","setIsInitialized","location","navigate","initializeTelegram","isTelegramApp","init","telegramUser","getUser","console","log","setBackButtonCallback","window","history","length","close","pathname","showBackButton","hideBackButton","handleLocationUpdate","lat","lon","className","style","height","children","role","concat","onLocationUpdate","path","element","initialUserLocation","AppWrapper","_window$Telegram","Telegram","WebApp","undefined","HashRouter","require","BrowserRouter","App"],"sources":["D:/map for cur/toilet-finder-kaliningrad/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\nimport './styles/mobile.css';\nimport MapPage from './components/MapPage';\nimport AdminPanel from './components/AdminPanel';\nimport Navigation from './components/Navigation';\nimport { GeolocationHandler } from './components/GeolocationHandler';\nimport { telegramService } from './services/telegram';\n\n// Объявление типов для Telegram WebApp API\ndeclare global {\n  interface Window {\n    Telegram?: {\n      WebApp?: any;\n    };\n  }\n}\n\nfunction AppContent() {\n  const [userLocation, setUserLocation] = useState<{ lat: number; lon: number } | null>(null);\n  const [isTelegram, setIsTelegram] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Инициализация Telegram WebApp\n    const initializeTelegram = async () => {\n      if (telegramService.isTelegramApp()) {\n        telegramService.init();\n        setIsTelegram(true);\n        \n        // Получаем данные пользователя Telegram\n        const telegramUser = await telegramService.getUser();\n        if (telegramUser) {\n          console.log('Telegram user:', telegramUser);\n        }\n        \n        // Управление кнопкой \"Назад\"\n        telegramService.setBackButtonCallback(() => {\n          if (window.history.length > 1) {\n            navigate(-1);\n          } else {\n            telegramService.close();\n          }\n        });\n\n        // Показываем/скрываем кнопку \"Назад\"\n        if (location.pathname !== '/') {\n          telegramService.showBackButton();\n        } else {\n          telegramService.hideBackButton();\n        }\n      }\n      setIsInitialized(true);\n    };\n\n    initializeTelegram();\n  }, []);\n\n  useEffect(() => {\n    if (isInitialized && isTelegram) {\n      // Обновляем состояние кнопки \"Назад\" при изменении маршрута\n      if (location.pathname !== '/') {\n        telegramService.showBackButton();\n      } else {\n        telegramService.hideBackButton();\n      }\n    }\n  }, [location.pathname, isInitialized, isTelegram]);\n\n  const handleLocationUpdate = (lat: number, lon: number) => {\n    setUserLocation({ lat, lon });\n  };\n\n  if (!isInitialized) {\n    return (\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"visually-hidden\">Загрузка...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`App ${isTelegram ? 'telegram-app' : ''}`}>\n      <GeolocationHandler onLocationUpdate={handleLocationUpdate} />\n      {!isTelegram && <Navigation />}\n      <Routes>\n        <Route \n          path=\"/\" \n          element={<MapPage initialUserLocation={userLocation} isTelegram={isTelegram} />} \n        />\n        <Route \n          path=\"/admin\" \n          element={<AdminPanel isTelegram={isTelegram} />} \n        />\n      </Routes>\n    </div>\n  );\n}\n\n// Определяем компонент роутера в зависимости от среды\nconst AppWrapper = () => {\n  const isTelegram = typeof window !== 'undefined' && window.Telegram?.WebApp !== undefined;\n  \n  if (isTelegram) {\n    // Для Telegram используем HashRouter\n    const { HashRouter } = require('react-router-dom');\n    return (\n      <HashRouter>\n        <AppContent />\n      </HashRouter>\n    );\n  } else {\n    // Для обычного браузера используем BrowserRouter\n    const { BrowserRouter } = require('react-router-dom');\n    return (\n      <BrowserRouter>\n        <AppContent />\n      </BrowserRouter>\n    );\n  }\n};\n\nfunction App() {\n  return <AppWrapper />;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}