{"ast":null,"code":"import _objectSpread from\"d:/map for cur/toilet-finder-kaliningrad/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback,useMemo}from'react';import{MapContainer,TileLayer,Marker,Popup}from'react-leaflet';import{Button,Alert,Card,Badge}from'react-bootstrap';import{toiletAPI}from'../services/api';import L from'leaflet';import Legend from'./Legend';import AddToiletModal from'./AddToiletModal';// Fix for default marker icons\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";delete L.Icon.Default.prototype._getIconUrl;L.Icon.Default.mergeOptions({iconRetinaUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',iconUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',shadowUrl:'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'});// Оптимизированные иконки с кэшированием\nconst iconCache=new Map();const createCustomIcon=type=>{if(iconCache.has(type)){return iconCache.get(type);}const iconConfig={free:{color:'#28a745'},paid:{color:'#dc3545'},purchase_required:{color:'#ffc107'}};const config=iconConfig[type];const icon=L.divIcon({html:\"<div style=\\\"background-color: \".concat(config.color,\"; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\\\"></div>\"),className:'custom-toilet-marker',iconSize:[20,20],iconAnchor:[10,10],popupAnchor:[0,-10]});iconCache.set(type,icon);return icon;};// Kaliningrad center coordinates\nconst KALININGRAD_CENTER=[54.710,20.511];const MapPage=()=>{const[toilets,setToilets]=useState([]);const[showAddModal,setShowAddModal]=useState(false);const[userLocation,setUserLocation]=useState(null);const[locationLoading,setLocationLoading]=useState(false);const[loading,setLoading]=useState(false);const[alert,setAlert]=useState({show:false,message:'',variant:'success'});useEffect(()=>{loadToilets();getUserLocation();},[]);const getUserLocation=useCallback(()=>{if('geolocation'in navigator){setLocationLoading(true);// Устанавливаем таймаут для геолокации\nconst timeoutId=setTimeout(()=>{setLocationLoading(false);setAlert({show:true,message:'Не удалось определить местоположение. Проверьте настройки геолокации.',variant:'warning'});},10000);// 10 секунд\nnavigator.geolocation.getCurrentPosition(position=>{clearTimeout(timeoutId);const{latitude,longitude}=position.coords;setUserLocation([latitude,longitude]);setLocationLoading(false);},error=>{clearTimeout(timeoutId);console.error('Error getting location:',error);setLocationLoading(false);let message='Не удалось определить местоположение';switch(error.code){case error.PERMISSION_DENIED:message='Доступ к геолокации запрещен';break;case error.POSITION_UNAVAILABLE:message='Информация о местоположении недоступна';break;case error.TIMEOUT:message='Время ожидания геолокации истекло';break;}setAlert({show:true,message,variant:'warning'});},{enableHighAccuracy:true,timeout:8000,maximumAge:300000// 5 минут кэша геолокации\n});}},[]);const loadToilets=useCallback(async()=>{try{const response=await toiletAPI.getAll();// Обрабатываем новый формат ответа с пагинацией\nconst data=Array.isArray(response)?response:response.data||[];setToilets(data);}catch(error){console.error('Error loading toilets:',error);setAlert({show:true,message:'Ошибка загрузки данных',variant:'danger'});}},[]);const handleAddToilet=useCallback(async data=>{setLoading(true);try{await toiletAPI.submit(data);setAlert({show:true,message:'Точка отправлена на модерацию',variant:'success'});setShowAddModal(false);// Перезагружаем данные после добавления\nawait loadToilets();}catch(error){var _error$response,_error$response$data;setAlert({show:true,message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Ошибка отправки',variant:'danger'});}finally{setLoading(false);}},[loadToilets]);// Оптимизированные функции с мемоизацией\nconst getTypeLabel=useCallback(type=>{const labels={free:'Бесплатный',paid:'Платный',purchase_required:'Только за покупку'};return labels[type];},[]);const getTypeBadgeVariant=useCallback(type=>{const variants={free:'success',paid:'danger',purchase_required:'warning'};return variants[type];},[]);// Мемоизированные маркеры для оптимизации рендеринга\nconst toiletMarkers=useMemo(()=>{return toilets.map(toilet=>/*#__PURE__*/_jsx(Marker,{position:[toilet.latitude,toilet.longitude],icon:createCustomIcon(toilet.type),children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsx(Card,{className:\"border-0\",style:{width:'250px'},children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{className:\"h6\",children:toilet.name}),/*#__PURE__*/_jsxs(Card.Text,{className:\"small text-muted mb-2\",children:[\"\\uD83D\\uDCCD \",toilet.address]}),/*#__PURE__*/_jsx(Badge,{bg:getTypeBadgeVariant(toilet.type),className:\"mb-2\",children:getTypeLabel(toilet.type)}),toilet.price&&/*#__PURE__*/_jsxs(\"div\",{className:\"small mb-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\"}),\" \",toilet.price]}),toilet.description&&/*#__PURE__*/_jsx(\"div\",{className:\"small text-muted\",children:toilet.description})]})})})},toilet.id));},[toilets,getTypeLabel,getTypeBadgeVariant]);// Мемоизированный маркер пользователя\nconst userLocationMarker=useMemo(()=>{if(!userLocation)return null;return/*#__PURE__*/_jsx(Marker,{position:userLocation,icon:L.divIcon({html:'<div style=\"background-color: #007bff; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\"></div>',className:'user-location-marker',iconSize:[20,20],iconAnchor:[10,10],popupAnchor:[0,-10]}),children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0412\\u0430\\u0448\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\"})})})});},[userLocation]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid p-0\",children:[alert.show&&/*#__PURE__*/_jsx(Alert,{variant:alert.variant,onClose:()=>setAlert(prev=>_objectSpread(_objectSpread({},prev),{},{show:false})),dismissible:true,className:\"m-3\",children:alert.message}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center p-3 bg-light\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h3 mb-0\",children:\"\\u041A\\u0430\\u0440\\u0442\\u0430 \\u0442\\u043E\\u0447\\u0435\\u043A\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",onClick:getUserLocation,disabled:locationLoading,className:\"me-2\",children:locationLoading?'📍...':'📍 Мое местоположение'}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>setShowAddModal(true),children:\"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u0447\\u043A\\u0443\"})]})]}),/*#__PURE__*/_jsx(Legend,{userLocationExists:!!userLocation}),/*#__PURE__*/_jsx(\"div\",{style:{height:'calc(100vh - 200px)'},children:/*#__PURE__*/_jsxs(MapContainer,{center:KALININGRAD_CENTER,zoom:12,style:{height:'100%',width:'100%'},children:[/*#__PURE__*/_jsx(TileLayer,{attribution:\"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),userLocationMarker,toiletMarkers]})}),/*#__PURE__*/_jsx(AddToiletModal,{show:showAddModal,onHide:()=>setShowAddModal(false),onSubmit:handleAddToilet,loading:loading})]});};export default MapPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","MapContainer","TileLayer","Marker","Popup","Button","Alert","Card","Badge","toiletAPI","L","Legend","AddToiletModal","jsx","_jsx","jsxs","_jsxs","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","iconCache","Map","createCustomIcon","type","has","get","iconConfig","free","color","paid","purchase_required","config","icon","divIcon","html","concat","className","iconSize","iconAnchor","popupAnchor","set","KALININGRAD_CENTER","MapPage","toilets","setToilets","showAddModal","setShowAddModal","userLocation","setUserLocation","locationLoading","setLocationLoading","loading","setLoading","alert","setAlert","show","message","variant","loadToilets","getUserLocation","navigator","timeoutId","setTimeout","geolocation","getCurrentPosition","position","clearTimeout","latitude","longitude","coords","error","console","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","timeout","maximumAge","response","getAll","data","Array","isArray","handleAddToilet","submit","_error$response","_error$response$data","getTypeLabel","labels","getTypeBadgeVariant","variants","toiletMarkers","map","toilet","children","style","width","Body","Title","name","Text","address","bg","price","description","id","userLocationMarker","onClose","prev","_objectSpread","dismissible","onClick","disabled","userLocationExists","height","center","zoom","attribution","url","onHide","onSubmit"],"sources":["d:/map for cur/toilet-finder-kaliningrad/frontend/src/components/MapPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Button, Alert, Card, Badge } from 'react-bootstrap';\nimport { Toilet, ToiletFormData } from '../types';\nimport { toiletAPI } from '../services/api';\nimport L from 'leaflet';\nimport Legend from './Legend';\nimport AddToiletModal from './AddToiletModal';\n\n// Fix for default marker icons\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Оптимизированные иконки с кэшированием\nconst iconCache = new Map<string, L.DivIcon>();\n\nconst createCustomIcon = (type: Toilet['type']): L.DivIcon => {\n  if (iconCache.has(type)) {\n    return iconCache.get(type)!;\n  }\n\n  const iconConfig = {\n    free: { color: '#28a745' },\n    paid: { color: '#dc3545' },\n    purchase_required: { color: '#ffc107' }\n  };\n\n  const config = iconConfig[type];\n  const icon = L.divIcon({\n    html: `<div style=\"background-color: ${config.color}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\"></div>`,\n    className: 'custom-toilet-marker',\n    iconSize: [20, 20],\n    iconAnchor: [10, 10],\n    popupAnchor: [0, -10]\n  });\n  \n  iconCache.set(type, icon);\n  return icon;\n};\n\n// Kaliningrad center coordinates\nconst KALININGRAD_CENTER = [54.710, 20.511] as [number, number];\n\nconst MapPage: React.FC = () => {\n  const [toilets, setToilets] = useState<Toilet[]>([]);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [userLocation, setUserLocation] = useState<[number, number] | null>(null);\n  const [locationLoading, setLocationLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState<{ show: boolean; message: string; variant: string }>({\n    show: false,\n    message: '',\n    variant: 'success'\n  });\n\n  useEffect(() => {\n    loadToilets();\n    getUserLocation();\n  }, []);\n\n  const getUserLocation = useCallback(() => {\n    if ('geolocation' in navigator) {\n      setLocationLoading(true);\n      \n      // Устанавливаем таймаут для геолокации\n      const timeoutId = setTimeout(() => {\n        setLocationLoading(false);\n        setAlert({\n          show: true,\n          message: 'Не удалось определить местоположение. Проверьте настройки геолокации.',\n          variant: 'warning'\n        });\n      }, 10000); // 10 секунд\n      \n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          clearTimeout(timeoutId);\n          const { latitude, longitude } = position.coords;\n          setUserLocation([latitude, longitude]);\n          setLocationLoading(false);\n        },\n        (error) => {\n          clearTimeout(timeoutId);\n          console.error('Error getting location:', error);\n          setLocationLoading(false);\n          \n          let message = 'Не удалось определить местоположение';\n          switch(error.code) {\n            case error.PERMISSION_DENIED:\n              message = 'Доступ к геолокации запрещен';\n              break;\n            case error.POSITION_UNAVAILABLE:\n              message = 'Информация о местоположении недоступна';\n              break;\n            case error.TIMEOUT:\n              message = 'Время ожидания геолокации истекло';\n              break;\n          }\n          \n          setAlert({\n            show: true,\n            message,\n            variant: 'warning'\n          });\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 8000,\n          maximumAge: 300000 // 5 минут кэша геолокации\n        }\n      );\n    }\n  }, []);\n\n  const loadToilets = useCallback(async () => {\n    try {\n      const response = await toiletAPI.getAll();\n      // Обрабатываем новый формат ответа с пагинацией\n      const data = Array.isArray(response) ? response : response.data || [];\n      setToilets(data);\n    } catch (error) {\n      console.error('Error loading toilets:', error);\n      setAlert({\n        show: true,\n        message: 'Ошибка загрузки данных',\n        variant: 'danger'\n      });\n    }\n  }, []);\n\n  const handleAddToilet = useCallback(async (data: ToiletFormData) => {\n    setLoading(true);\n    try {\n      await toiletAPI.submit(data);\n      setAlert({\n        show: true,\n        message: 'Точка отправлена на модерацию',\n        variant: 'success'\n      });\n      setShowAddModal(false);\n      // Перезагружаем данные после добавления\n      await loadToilets();\n    } catch (error: any) {\n      setAlert({\n        show: true,\n        message: error.response?.data?.error || 'Ошибка отправки',\n        variant: 'danger'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [loadToilets]);\n\n\n\n  // Оптимизированные функции с мемоизацией\n  const getTypeLabel = useCallback((type: Toilet['type']) => {\n    const labels = {\n      free: 'Бесплатный',\n      paid: 'Платный',\n      purchase_required: 'Только за покупку'\n    };\n    return labels[type];\n  }, []);\n\n  const getTypeBadgeVariant = useCallback((type: Toilet['type']) => {\n    const variants = {\n      free: 'success',\n      paid: 'danger',\n      purchase_required: 'warning'\n    };\n    return variants[type];\n  }, []);\n\n  // Мемоизированные маркеры для оптимизации рендеринга\n  const toiletMarkers = useMemo(() => {\n    return toilets.map((toilet) => (\n      <Marker \n        key={toilet.id} \n        position={[toilet.latitude, toilet.longitude]}\n        icon={createCustomIcon(toilet.type)}\n      >\n        <Popup>\n          <Card className=\"border-0\" style={{ width: '250px' }}>\n            <Card.Body>\n              <Card.Title className=\"h6\">{toilet.name}</Card.Title>\n              <Card.Text className=\"small text-muted mb-2\">\n                📍 {toilet.address}\n              </Card.Text>\n              <Badge bg={getTypeBadgeVariant(toilet.type)} className=\"mb-2\">\n                {getTypeLabel(toilet.type)}\n              </Badge>\n              {toilet.price && (\n                <div className=\"small mb-2\">\n                  <strong>Стоимость:</strong> {toilet.price}\n                </div>\n              )}\n              {toilet.description && (\n                <div className=\"small text-muted\">\n                  {toilet.description}\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </Popup>\n      </Marker>\n    ));\n  }, [toilets, getTypeLabel, getTypeBadgeVariant]);\n\n  // Мемоизированный маркер пользователя\n  const userLocationMarker = useMemo(() => {\n    if (!userLocation) return null;\n    \n    return (\n      <Marker \n        position={userLocation}\n        icon={L.divIcon({\n          html: '<div style=\"background-color: #007bff; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\"></div>',\n          className: 'user-location-marker',\n          iconSize: [20, 20],\n          iconAnchor: [10, 10],\n          popupAnchor: [0, -10]\n        })}\n      >\n        <Popup>\n          <div className=\"text-center\">\n            <strong>Ваше местоположение</strong>\n          </div>\n        </Popup>\n      </Marker>\n    );\n  }, [userLocation]);\n\n  return (\n    <div className=\"container-fluid p-0\">\n      {alert.show && (\n        <Alert \n          variant={alert.variant} \n          onClose={() => setAlert(prev => ({ ...prev, show: false }))}\n          dismissible\n          className=\"m-3\"\n        >\n          {alert.message}\n        </Alert>\n      )}\n\n      <div className=\"d-flex justify-content-between align-items-center p-3 bg-light\">\n        <h1 className=\"h3 mb-0\">Карта точек</h1>\n        <div>\n          <Button \n            variant=\"outline-secondary\" \n            onClick={getUserLocation}\n            disabled={locationLoading}\n            className=\"me-2\"\n          >\n            {locationLoading ? '📍...' : '📍 Мое местоположение'}\n          </Button>\n          <Button \n            variant=\"primary\" \n            onClick={() => setShowAddModal(true)}\n          >\n            + Добавить точку\n          </Button>\n        </div>\n      </div>\n\n      <Legend userLocationExists={!!userLocation} />\n\n      <div style={{ height: 'calc(100vh - 200px)' }}>\n        <MapContainer \n          center={KALININGRAD_CENTER} \n          zoom={12} \n          style={{ height: '100%', width: '100%' }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          {userLocationMarker}\n          {toiletMarkers}\n        </MapContainer>\n      </div>\n\n      <AddToiletModal\n        show={showAddModal}\n        onHide={() => setShowAddModal(false)}\n        onSubmit={handleAddToilet}\n        loading={loading}\n      />\n    </div>\n  );\n};\n\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}