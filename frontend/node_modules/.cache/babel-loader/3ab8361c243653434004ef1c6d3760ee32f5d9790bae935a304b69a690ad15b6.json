{"ast":null,"code":"var _jsxFileName = \"D:\\\\map for cur\\\\toilet-finder-kaliningrad\\\\frontend\\\\src\\\\components\\\\MapPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Button, Alert, Card, Badge } from 'react-bootstrap';\nimport { toiletAPI } from '../services/api';\nimport L from 'leaflet';\nimport Legend from './Legend';\nimport AddToiletModal from './AddToiletModal';\n\n// Fix for default marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Оптимизированные иконки с кэшированием\nconst iconCache = new Map();\nconst createCustomIcon = type => {\n  if (iconCache.has(type)) {\n    return iconCache.get(type);\n  }\n  const iconConfig = {\n    free: {\n      color: '#28a745'\n    },\n    paid: {\n      color: '#dc3545'\n    },\n    purchase_required: {\n      color: '#ffc107'\n    }\n  };\n  const config = iconConfig[type];\n  const icon = L.divIcon({\n    html: `<div style=\"background-color: ${config.color}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\"></div>`,\n    className: 'custom-toilet-marker',\n    iconSize: [20, 20],\n    iconAnchor: [10, 10],\n    popupAnchor: [0, -10]\n  });\n  iconCache.set(type, icon);\n  return icon;\n};\n\n// Kaliningrad center coordinates\nconst KALININGRAD_CENTER = [54.710, 20.511];\nconst MapPage = ({\n  initialUserLocation\n}) => {\n  _s();\n  const [toilets, setToilets] = useState([]);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [userLocation, setUserLocation] = useState(null);\n  const [locationLoading, setLocationLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState({\n    show: false,\n    message: '',\n    variant: 'success'\n  });\n  useEffect(() => {\n    loadToilets();\n\n    // Если есть начальное местоположение от GeolocationHandler, используем его\n    if (initialUserLocation) {\n      setUserLocation([initialUserLocation.lat, initialUserLocation.lon]);\n    } else {\n      // Иначе пробуем получить геолокацию напрямую\n      getUserLocation();\n    }\n  }, [initialUserLocation]);\n  const getUserLocation = useCallback(() => {\n    if ('geolocation' in navigator) {\n      setLocationLoading(true);\n\n      // Увеличиваем таймаут для мобильных устройств\n      const timeoutId = setTimeout(() => {\n        setLocationLoading(false);\n        setAlert({\n          show: true,\n          message: 'Не удалось определить местоположение. Проверьте настройки геолокации в браузере и системе.',\n          variant: 'warning'\n        });\n      }, 20000); // 20 секунд для мобильных устройств\n\n      navigator.geolocation.getCurrentPosition(position => {\n        clearTimeout(timeoutId);\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation([latitude, longitude]);\n        setLocationLoading(false);\n      }, error => {\n        clearTimeout(timeoutId);\n        console.error('Error getting location:', error);\n        setLocationLoading(false);\n        let message = 'Не удалось определить местоположение';\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            message = 'Доступ к геолокации запрещен. Разрешите доступ в настройках браузера.';\n            break;\n          case error.POSITION_UNAVAILABLE:\n            message = 'Информация о местоположении недоступна. Проверьте GPS на устройстве.';\n            break;\n          case error.TIMEOUT:\n            message = 'Время ожидания геолокации истекло. Попробуйте еще раз.';\n            break;\n        }\n        setAlert({\n          show: true,\n          message,\n          variant: 'warning'\n        });\n      }, {\n        enableHighAccuracy: true,\n        timeout: 15000,\n        // Увеличиваем таймаут\n        maximumAge: 60000 // Уменьшаем время кэша до 1 минуты\n      });\n    } else {\n      setAlert({\n        show: true,\n        message: 'Ваш браузер не поддерживает геолокацию',\n        variant: 'danger'\n      });\n    }\n  }, []);\n  const loadToilets = useCallback(async () => {\n    try {\n      const response = await toiletAPI.getAll();\n      // Обрабатываем новый формат ответа с пагинацией\n      const data = Array.isArray(response) ? response : response.data || [];\n      setToilets(data);\n    } catch (error) {\n      console.error('Error loading toilets:', error);\n      setAlert({\n        show: true,\n        message: 'Ошибка загрузки данных',\n        variant: 'danger'\n      });\n    }\n  }, []);\n  const handleAddToilet = useCallback(async data => {\n    setLoading(true);\n    try {\n      await toiletAPI.submit(data);\n      setAlert({\n        show: true,\n        message: 'Точка отправлена на модерацию',\n        variant: 'success'\n      });\n      setShowAddModal(false);\n      // Перезагружаем данные после добавления\n      await loadToilets();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setAlert({\n        show: true,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Ошибка отправки',\n        variant: 'danger'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [loadToilets]);\n\n  // Оптимизированные функции с мемоизацией\n  const getTypeLabel = useCallback(type => {\n    const labels = {\n      free: 'Бесплатный',\n      paid: 'Платный',\n      purchase_required: 'Только за покупку'\n    };\n    return labels[type];\n  }, []);\n  const getTypeBadgeVariant = useCallback(type => {\n    const variants = {\n      free: 'success',\n      paid: 'danger',\n      purchase_required: 'warning'\n    };\n    return variants[type];\n  }, []);\n\n  // Мемоизированные маркеры для оптимизации рендеринга\n  const toiletMarkers = useMemo(() => {\n    return toilets.map(toilet => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [toilet.latitude, toilet.longitude],\n      icon: createCustomIcon(toilet.type),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"border-0\",\n          style: {\n            width: '250px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"h6\",\n              children: toilet.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"small text-muted mb-2\",\n              children: [\"\\uD83D\\uDCCD \", toilet.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Badge, {\n              bg: getTypeBadgeVariant(toilet.type),\n              className: \"mb-2\",\n              children: getTypeLabel(toilet.type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), toilet.price && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), \" \", toilet.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), toilet.description && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small text-muted\",\n              children: toilet.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, toilet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this));\n  }, [toilets, getTypeLabel, getTypeBadgeVariant]);\n\n  // Мемоизированный маркер пользователя\n  const userLocationMarker = useMemo(() => {\n    if (!userLocation) return null;\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: userLocation,\n      icon: L.divIcon({\n        html: '<div style=\"background-color: #007bff; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\"></div>',\n        className: 'user-location-marker',\n        iconSize: [20, 20],\n        iconAnchor: [10, 10],\n        popupAnchor: [0, -10]\n      }),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0412\\u0430\\u0448\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\\u043F\\u043E\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  }, [userLocation]);\n\n  // Определяем центр карты - если есть местоположение пользователя, центрируем по нему\n  const mapCenter = userLocation || KALININGRAD_CENTER;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-0\",\n    children: [alert.show && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: alert.variant,\n      onClose: () => setAlert(prev => ({\n        ...prev,\n        show: false\n      })),\n      dismissible: true,\n      className: \"m-3\",\n      children: alert.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center p-3 bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-0\",\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u0430 \\u0442\\u043E\\u0447\\u0435\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          onClick: getUserLocation,\n          disabled: locationLoading,\n          className: \"me-2\",\n          children: locationLoading ? '📍...' : '📍 Мое местоположение'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => setShowAddModal(true),\n          children: \"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u0447\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      userLocationExists: !!userLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 'calc(100vh - 200px)'\n      },\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: userLocation ? 14 : 12,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), userLocationMarker, toiletMarkers]\n      }, `${mapCenter[0]}-${mapCenter[1]}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddToiletModal, {\n      show: showAddModal,\n      onHide: () => setShowAddModal(false),\n      onSubmit: handleAddToilet,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"7/86Bnppk7F6dkFWS5zN9W7nB7A=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","MapContainer","TileLayer","Marker","Popup","Button","Alert","Card","Badge","toiletAPI","L","Legend","AddToiletModal","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","iconCache","Map","createCustomIcon","type","has","get","iconConfig","free","color","paid","purchase_required","config","icon","divIcon","html","className","iconSize","iconAnchor","popupAnchor","set","KALININGRAD_CENTER","MapPage","initialUserLocation","_s","toilets","setToilets","showAddModal","setShowAddModal","userLocation","setUserLocation","locationLoading","setLocationLoading","loading","setLoading","alert","setAlert","show","message","variant","loadToilets","lat","lon","getUserLocation","navigator","timeoutId","setTimeout","geolocation","getCurrentPosition","position","clearTimeout","latitude","longitude","coords","error","console","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","timeout","maximumAge","response","getAll","data","Array","isArray","handleAddToilet","submit","_error$response","_error$response$data","getTypeLabel","labels","getTypeBadgeVariant","variants","toiletMarkers","map","toilet","children","style","width","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","address","bg","price","description","id","userLocationMarker","mapCenter","onClose","prev","dismissible","onClick","disabled","userLocationExists","height","center","zoom","attribution","url","onHide","onSubmit","_c","$RefreshReg$"],"sources":["D:/map for cur/toilet-finder-kaliningrad/frontend/src/components/MapPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Button, Alert, Card, Badge } from 'react-bootstrap';\nimport { Toilet, ToiletFormData } from '../types';\nimport { toiletAPI } from '../services/api';\nimport L from 'leaflet';\nimport Legend from './Legend';\nimport AddToiletModal from './AddToiletModal';\n\n// Fix for default marker icons\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Оптимизированные иконки с кэшированием\nconst iconCache = new Map<string, L.DivIcon>();\n\nconst createCustomIcon = (type: Toilet['type']): L.DivIcon => {\n  if (iconCache.has(type)) {\n    return iconCache.get(type)!;\n  }\n\n  const iconConfig = {\n    free: { color: '#28a745' },\n    paid: { color: '#dc3545' },\n    purchase_required: { color: '#ffc107' }\n  };\n\n  const config = iconConfig[type];\n  const icon = L.divIcon({\n    html: `<div style=\"background-color: ${config.color}; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\"></div>`,\n    className: 'custom-toilet-marker',\n    iconSize: [20, 20],\n    iconAnchor: [10, 10],\n    popupAnchor: [0, -10]\n  });\n  \n  iconCache.set(type, icon);\n  return icon;\n};\n\n// Kaliningrad center coordinates\nconst KALININGRAD_CENTER = [54.710, 20.511] as [number, number];\n\ninterface MapPageProps {\n  initialUserLocation?: { lat: number; lon: number } | null;\n}\n\nconst MapPage: React.FC<MapPageProps> = ({ initialUserLocation }) => {\n  const [toilets, setToilets] = useState<Toilet[]>([]);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [userLocation, setUserLocation] = useState<[number, number] | null>(null);\n  const [locationLoading, setLocationLoading] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState<{ show: boolean; message: string; variant: string }>({\n    show: false,\n    message: '',\n    variant: 'success'\n  });\n\n  useEffect(() => {\n    loadToilets();\n    \n    // Если есть начальное местоположение от GeolocationHandler, используем его\n    if (initialUserLocation) {\n      setUserLocation([initialUserLocation.lat, initialUserLocation.lon]);\n    } else {\n      // Иначе пробуем получить геолокацию напрямую\n      getUserLocation();\n    }\n  }, [initialUserLocation]);\n\n  const getUserLocation = useCallback(() => {\n    if ('geolocation' in navigator) {\n      setLocationLoading(true);\n      \n      // Увеличиваем таймаут для мобильных устройств\n      const timeoutId = setTimeout(() => {\n        setLocationLoading(false);\n        setAlert({\n          show: true,\n          message: 'Не удалось определить местоположение. Проверьте настройки геолокации в браузере и системе.',\n          variant: 'warning'\n        });\n      }, 20000); // 20 секунд для мобильных устройств\n      \n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          clearTimeout(timeoutId);\n          const { latitude, longitude } = position.coords;\n          setUserLocation([latitude, longitude]);\n          setLocationLoading(false);\n        },\n        (error) => {\n          clearTimeout(timeoutId);\n          console.error('Error getting location:', error);\n          setLocationLoading(false);\n          \n          let message = 'Не удалось определить местоположение';\n          switch(error.code) {\n            case error.PERMISSION_DENIED:\n              message = 'Доступ к геолокации запрещен. Разрешите доступ в настройках браузера.';\n              break;\n            case error.POSITION_UNAVAILABLE:\n              message = 'Информация о местоположении недоступна. Проверьте GPS на устройстве.';\n              break;\n            case error.TIMEOUT:\n              message = 'Время ожидания геолокации истекло. Попробуйте еще раз.';\n              break;\n          }\n          \n          setAlert({\n            show: true,\n            message,\n            variant: 'warning'\n          });\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 15000, // Увеличиваем таймаут\n          maximumAge: 60000 // Уменьшаем время кэша до 1 минуты\n        }\n      );\n    } else {\n      setAlert({\n        show: true,\n        message: 'Ваш браузер не поддерживает геолокацию',\n        variant: 'danger'\n      });\n    }\n  }, []);\n\n  const loadToilets = useCallback(async () => {\n    try {\n      const response = await toiletAPI.getAll();\n      // Обрабатываем новый формат ответа с пагинацией\n      const data = Array.isArray(response) ? response : (response as any).data || [];\n      setToilets(data);\n    } catch (error) {\n      console.error('Error loading toilets:', error);\n      setAlert({\n        show: true,\n        message: 'Ошибка загрузки данных',\n        variant: 'danger'\n      });\n    }\n  }, []);\n\n  const handleAddToilet = useCallback(async (data: ToiletFormData) => {\n    setLoading(true);\n    try {\n      await toiletAPI.submit(data);\n      setAlert({\n        show: true,\n        message: 'Точка отправлена на модерацию',\n        variant: 'success'\n      });\n      setShowAddModal(false);\n      // Перезагружаем данные после добавления\n      await loadToilets();\n    } catch (error: any) {\n      setAlert({\n        show: true,\n        message: error.response?.data?.error || 'Ошибка отправки',\n        variant: 'danger'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [loadToilets]);\n\n  // Оптимизированные функции с мемоизацией\n  const getTypeLabel = useCallback((type: Toilet['type']) => {\n    const labels = {\n      free: 'Бесплатный',\n      paid: 'Платный',\n      purchase_required: 'Только за покупку'\n    };\n    return labels[type];\n  }, []);\n\n  const getTypeBadgeVariant = useCallback((type: Toilet['type']) => {\n    const variants = {\n      free: 'success',\n      paid: 'danger',\n      purchase_required: 'warning'\n    };\n    return variants[type];\n  }, []);\n\n  // Мемоизированные маркеры для оптимизации рендеринга\n  const toiletMarkers = useMemo(() => {\n    return toilets.map((toilet) => (\n      <Marker \n        key={toilet.id} \n        position={[toilet.latitude, toilet.longitude]}\n        icon={createCustomIcon(toilet.type)}\n      >\n        <Popup>\n          <Card className=\"border-0\" style={{ width: '250px' }}>\n            <Card.Body>\n              <Card.Title className=\"h6\">{toilet.name}</Card.Title>\n              <Card.Text className=\"small text-muted mb-2\">\n                📍 {toilet.address}\n              </Card.Text>\n              <Badge bg={getTypeBadgeVariant(toilet.type)} className=\"mb-2\">\n                {getTypeLabel(toilet.type)}\n              </Badge>\n              {toilet.price && (\n                <div className=\"small mb-2\">\n                  <strong>Стоимость:</strong> {toilet.price}\n                </div>\n              )}\n              {toilet.description && (\n                <div className=\"small text-muted\">\n                  {toilet.description}\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </Popup>\n      </Marker>\n    ));\n  }, [toilets, getTypeLabel, getTypeBadgeVariant]);\n\n  // Мемоизированный маркер пользователя\n  const userLocationMarker = useMemo(() => {\n    if (!userLocation) return null;\n    \n    return (\n      <Marker \n        position={userLocation}\n        icon={L.divIcon({\n          html: '<div style=\"background-color: #007bff; width: 20px; height: 20px; border-radius: 50%; border: 2px solid white; box-shadow: 0 2px 4px rgba(0,0,0,0.3);\"></div>',\n          className: 'user-location-marker',\n          iconSize: [20, 20],\n          iconAnchor: [10, 10],\n          popupAnchor: [0, -10]\n        })}\n      >\n        <Popup>\n          <div className=\"text-center\">\n            <strong>Ваше местоположение</strong>\n          </div>\n        </Popup>\n      </Marker>\n    );\n  }, [userLocation]);\n\n  // Определяем центр карты - если есть местоположение пользователя, центрируем по нему\n  const mapCenter = userLocation || KALININGRAD_CENTER;\n\n  return (\n    <div className=\"container-fluid p-0\">\n      {alert.show && (\n        <Alert \n          variant={alert.variant} \n          onClose={() => setAlert(prev => ({ ...prev, show: false }))}\n          dismissible\n          className=\"m-3\"\n        >\n          {alert.message}\n        </Alert>\n      )}\n\n      <div className=\"d-flex justify-content-between align-items-center p-3 bg-light\">\n        <h1 className=\"h3 mb-0\">Карта точек</h1>\n        <div>\n          <Button \n            variant=\"outline-secondary\" \n            onClick={getUserLocation}\n            disabled={locationLoading}\n            className=\"me-2\"\n          >\n            {locationLoading ? '📍...' : '📍 Мое местоположение'}\n          </Button>\n          <Button \n            variant=\"primary\" \n            onClick={() => setShowAddModal(true)}\n          >\n            + Добавить точку\n          </Button>\n        </div>\n      </div>\n\n      <Legend userLocationExists={!!userLocation} />\n\n      <div style={{ height: 'calc(100vh - 200px)' }}>\n        <MapContainer \n          center={mapCenter} \n          zoom={userLocation ? 14 : 12} \n          style={{ height: '100%', width: '100%' }}\n          key={`${mapCenter[0]}-${mapCenter[1]}`} // Key для перерисовки при смене центра\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          {userLocationMarker}\n          {toiletMarkers}\n        </MapContainer>\n      </div>\n\n      <AddToiletModal\n        show={showAddModal}\n        onHide={() => setShowAddModal(false)}\n        onSubmit={handleAddToilet}\n        loading={loading}\n      />\n    </div>\n  );\n};\n\nexport default MapPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}