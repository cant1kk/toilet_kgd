{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Routes,Route,useLocation,useNavigate}from'react-router-dom';import'bootstrap/dist/css/bootstrap.min.css';import'leaflet/dist/leaflet.css';import'./App.css';import'./styles/mobile.css';import MapPage from'./components/MapPage';import AdminPanel from'./components/AdminPanel';import Navigation from'./components/Navigation';import{GeolocationHandler}from'./components/GeolocationHandler';import{telegramService}from'./services/telegram';// Объявление типов для Telegram WebApp API\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AppContent(){const[userLocation,setUserLocation]=useState(null);const[isTelegram,setIsTelegram]=useState(false);const[isInitialized,setIsInitialized]=useState(false);const location=useLocation();const navigate=useNavigate();useEffect(()=>{// Инициализация Telegram WebApp\nconst initializeTelegram=async()=>{if(telegramService.isTelegramApp()){telegramService.init();setIsTelegram(true);// Получаем данные пользователя Telegram\nconst telegramUser=await telegramService.getUser();if(telegramUser){console.log('Telegram user:',telegramUser);}// Управление кнопкой \"Назад\"\ntelegramService.setBackButtonCallback(()=>{if(window.history.length>1){navigate(-1);}else{telegramService.close();}});// Показываем/скрываем кнопку \"Назад\"\nif(location.pathname!=='/'){telegramService.showBackButton();}else{telegramService.hideBackButton();}}setIsInitialized(true);};initializeTelegram();},[]);useEffect(()=>{if(isInitialized&&isTelegram){// Обновляем состояние кнопки \"Назад\" при изменении маршрута\nif(location.pathname!=='/'){telegramService.showBackButton();}else{telegramService.hideBackButton();}}},[location.pathname,isInitialized,isTelegram]);const handleLocationUpdate=(lat,lon)=>{setUserLocation({lat,lon});};if(!isInitialized){return/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center align-items-center\",style:{height:'100vh'},children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"})})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(isTelegram?'telegram-app':''),children:[/*#__PURE__*/_jsx(GeolocationHandler,{onLocationUpdate:handleLocationUpdate}),!isTelegram&&/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(MapPage,{initialUserLocation:userLocation,isTelegram:isTelegram})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(AdminPanel,{isTelegram:isTelegram})})]})]});}// Определяем компонент роутера в зависимости от среды\nconst AppWrapper=()=>{var _window$Telegram;const isTelegram=typeof window!=='undefined'&&((_window$Telegram=window.Telegram)===null||_window$Telegram===void 0?void 0:_window$Telegram.WebApp)!==undefined;if(isTelegram){// Для Telegram используем HashRouter\nconst{HashRouter}=require('react-router-dom');return/*#__PURE__*/_jsx(HashRouter,{children:/*#__PURE__*/_jsx(AppContent,{})});}else{// Для обычного браузера используем BrowserRouter\nconst{BrowserRouter}=require('react-router-dom');return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(AppContent,{})});}};function App(){return/*#__PURE__*/_jsx(AppWrapper,{});}export default App;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}