{"ast":null,"code":"var _jsxFileName = \"d:\\\\map for cur\\\\toilet-finder-kaliningrad\\\\frontend\\\\src\\\\components\\\\AddToiletModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\nimport { validateAddress, geocodeAddress, formatAddress } from '../services/geocoding';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddToiletModal = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  show,\n  onHide,\n  onSubmit,\n  loading\n}) => {\n  _s();\n  const [newToilet, setNewToilet] = useState({\n    name: '',\n    address: '',\n    latitude: 0,\n    longitude: 0,\n    type: 'free',\n    price: '',\n    description: ''\n  });\n  const [geocodingLoading, setGeocodingLoading] = useState(false);\n  const [addressError, setAddressError] = useState('');\n  const handleAddressChange = useCallback(async address => {\n    setNewToilet(prev => ({\n      ...prev,\n      address\n    }));\n\n    // Валидация адреса\n    if (address && !validateAddress(address)) {\n      setAddressError('Введите корректный адрес (улица и номер дома)');\n      return;\n    }\n    setAddressError('');\n\n    // Автоматическое определение координат при вводе адреса\n    if (address && validateAddress(address)) {\n      setGeocodingLoading(true);\n      try {\n        const result = await geocodeAddress(address);\n        if (result && result.lat) {\n          const lat = parseFloat(result.lat);\n          const lng = parseFloat(result.lon);\n\n          // Проверка, что коораты в пределах Калининграда\n          if (lat >= 54.6 && lat <= 54.8 && lng >= 20.3 && lng <= 20.6) {\n            setNewToilet(prev => ({\n              ...prev,\n              latitude: lat,\n              longitude: lng,\n              address: formatAddress(address)\n            }));\n            setAddressError('');\n          } else {\n            setAddressError('Адрес находится за пределами Калининграда');\n          }\n        } else {\n          setAddressError('Адрес не найден. Проверьте правильность введенных данных');\n        }\n      } catch (error) {\n        setAddressError('Ошибка определения координат. Попробуйте еще раз');\n      } finally {\n        setGeocodingLoading(false);\n      }\n    }\n  }, []);\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n\n    // Финальная валидация\n    if (!newToilet.name || !newToilet.address) {\n      return;\n    }\n    if (!validateAddress(newToilet.address)) {\n      setAddressError('Введите корректный адрес (улица и номер дома)');\n      return;\n    }\n    if (!newToilet.latitude || !newToilet.longitude) {\n      setAddressError('Не удалось определить координаты. Проверьте адрес');\n      return;\n    }\n    await onSubmit(newToilet);\n    resetForm();\n  }, [newToilet, onSubmit]);\n  const resetForm = useCallback(() => {\n    setNewToilet({\n      name: '',\n      address: '',\n      latitude: 0,\n      longitude: 0,\n      type: 'free',\n      price: '',\n      description: ''\n    });\n    setAddressError('');\n  }, []);\n  const handleHide = useCallback(() => {\n    resetForm();\n    onHide();\n  }, [resetForm, onHide]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleHide,\n    size: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u0442\\u043E\\u0447\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), \" \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0430\\u0434\\u0440\\u0435\\u0441 \\u0432 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0435 \\\"\\u0443\\u043B. \\u041B\\u0435\\u043D\\u0438\\u043D\\u0441\\u043A\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0441\\u043F\\u0435\\u043A\\u0442 30\\\" \\u0438\\u043B\\u0438 \\\"\\u041A\\u0438\\u0440\\u043E\\u0432\\u0430 15\\\". \\u041A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B \\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u044F\\u0442\\u0441\\u044F \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            required: true,\n            value: newToilet.name,\n            onChange: e => setNewToilet(prev => ({\n              ...prev,\n              name: e.target.value\n            })),\n            placeholder: \"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: \\u0422\\u0443\\u0430\\u043B\\u0435\\u0442 \\u0432 \\u0422\\u0426\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0410\\u0434\\u0440\\u0435\\u0441 *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"position-relative\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              required: true,\n              value: newToilet.address,\n              onChange: e => handleAddressChange(e.target.value),\n              placeholder: \"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: \\u0443\\u043B. \\u041B\\u0435\\u043D\\u0438\\u043D\\u0441\\u043A\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0441\\u043F\\u0435\\u043A\\u0442 30\",\n              isInvalid: !!addressError,\n              disabled: geocodingLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), geocodingLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"position-absolute\",\n              style: {\n                right: '10px',\n                top: '8px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                size: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: addressError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0443\\u043B\\u0438\\u0446\\u0443 \\u0438 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0434\\u043E\\u043C\\u0430. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: \\\"\\u041A\\u0438\\u0440\\u043E\\u0432\\u0430 15\\\" \\u0438\\u043B\\u0438 \\\"\\u0443\\u043B. \\u041B\\u0435\\u043D\\u0438\\u043D\\u0430 30\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), newToilet.latitude && newToilet.longitude && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          className: \"small\",\n          children: [\"\\u2705 \\u041A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B \\u043E\\u043F\\u0440\\u0435\\u0434\\u0435\\u043B\\u0435\\u043D\\u044B: \", newToilet.latitude.toFixed(6), \", \", newToilet.longitude.toFixed(6)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0422\\u0438\\u043F *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            required: true,\n            value: newToilet.type,\n            onChange: e => setNewToilet(prev => ({\n              ...prev,\n              type: e.target.value\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"free\",\n              children: \"frei \\u0411\\u0435\\u0441\\u043F\\u043B\\u0430\\u0442\\u043D\\u044B\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"paid\",\n              children: \"\\uD83D\\uDCB0 \\u041F\\u043B\\u0430\\u0442\\u043D\\u044B\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"purchase_required\",\n              children: \"\\uD83D\\uDED2 \\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0437\\u0430 \\u043F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), (newToilet.type === 'paid' || newToilet.type === 'purchase_required') && /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C / \\u0423\\u0441\\u043B\\u043E\\u0432\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: newToilet.price,\n            onChange: e => setNewToilet(prev => ({\n              ...prev,\n              price: e.target.value\n            })),\n            placeholder: \"\\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: 50 \\u0440\\u0443\\u0431\\u043B\\u0435\\u0439 / \\u041F\\u043E\\u043A\\u0443\\u043F\\u043A\\u0430 \\u043E\\u0442 100 \\u0440\\u0443\\u0431\\u043B\\u0435\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: newToilet.description,\n            onChange: e => setNewToilet(prev => ({\n              ...prev,\n              description: e.target.value\n            })),\n            placeholder: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F (\\u0447\\u0430\\u0441\\u044B \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B, \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E\\u0441\\u0442\\u044C \\u0438 \\u0442.\\u0434.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleHide,\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: loading || geocodingLoading || !newToilet.latitude || !!addressError,\n          children: loading ? 'Отправка...' : 'Отправить на модерацию'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}, \"72yH2UMgSoasvddh3Ln3zUws1IY=\")), \"72yH2UMgSoasvddh3Ln3zUws1IY=\");\n_c2 = AddToiletModal;\nAddToiletModal.displayName = 'AddToiletModal';\nexport default AddToiletModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"AddToiletModal$React.memo\");\n$RefreshReg$(_c2, \"AddToiletModal\");","map":{"version":3,"names":["React","useState","useCallback","Modal","Button","Form","Alert","Spinner","validateAddress","geocodeAddress","formatAddress","jsxDEV","_jsxDEV","AddToiletModal","_s","memo","_c","show","onHide","onSubmit","loading","newToilet","setNewToilet","name","address","latitude","longitude","type","price","description","geocodingLoading","setGeocodingLoading","addressError","setAddressError","handleAddressChange","prev","result","lat","parseFloat","lng","lon","error","handleSubmit","e","preventDefault","resetForm","handleHide","size","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","Group","className","Label","Control","required","value","onChange","target","placeholder","isInvalid","disabled","style","right","top","animation","Feedback","Text","toFixed","Select","as","rows","Footer","onClick","_c2","displayName","$RefreshReg$"],"sources":["d:/map for cur/toilet-finder-kaliningrad/frontend/src/components/AddToiletModal.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Modal, Button, Form, Alert, Spinner } from 'react-bootstrap';\r\nimport { ToiletFormData, Toilet } from '../types';\r\nimport { validateAddress, geocodeAddress, formatAddress } from '../services/geocoding';\r\n\r\ninterface AddToiletModalProps {\r\n  show: boolean;\r\n  onHide: () => void;\r\n  onSubmit: (data: ToiletFormData) => Promise<void>;\r\n  loading: boolean;\r\n}\r\n\r\nconst AddToiletModal: React.FC<AddToiletModalProps> = React.memo(({\r\n  show,\r\n  onHide,\r\n  onSubmit,\r\n  loading\r\n}) => {\r\n  const [newToilet, setNewToilet] = useState<ToiletFormData>({\r\n    name: '',\r\n    address: '',\r\n    latitude: 0,\r\n    longitude: 0,\r\n    type: 'free',\r\n    price: '',\r\n    description: ''\r\n  });\r\n  \r\n  const [geocodingLoading, setGeocodingLoading] = useState(false);\r\n  const [addressError, setAddressError] = useState('');\r\n\r\n  const handleAddressChange = useCallback(async (address: string) => {\r\n    setNewToilet(prev => ({ ...prev, address }));\r\n    \r\n    // Валидация адреса\r\n    if (address && !validateAddress(address)) {\r\n      setAddressError('Введите корректный адрес (улица и номер дома)');\r\n      return;\r\n    }\r\n    \r\n    setAddressError('');\r\n    \r\n    // Автоматическое определение координат при вводе адреса\r\n    if (address && validateAddress(address)) {\r\n      setGeocodingLoading(true);\r\n      try {\r\n        const result = await geocodeAddress(address);\r\n        if (result && result.lat) {\r\n          const lat = parseFloat(result.lat);\r\n          const lng = parseFloat(result.lon);\r\n          \r\n          // Проверка, что коораты в пределах Калининграда\r\n          if (lat >= 54.6 && lat <= 54.8 && lng >= 20.3 && lng <= 20.6) {\r\n            setNewToilet(prev => ({\r\n              ...prev,\r\n              latitude: lat,\r\n              longitude: lng,\r\n              address: formatAddress(address)\r\n            }));\r\n            setAddressError('');\r\n          } else {\r\n            setAddressError('Адрес находится за пределами Калининграда');\r\n          }\r\n        } else {\r\n          setAddressError('Адрес не найден. Проверьте правильность введенных данных');\r\n        }\r\n      } catch (error) {\r\n        setAddressError('Ошибка определения координат. Попробуйте еще раз');\r\n      } finally {\r\n        setGeocodingLoading(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // Финальная валидация\r\n    if (!newToilet.name || !newToilet.address) {\r\n      return;\r\n    }\r\n\r\n    if (!validateAddress(newToilet.address)) {\r\n      setAddressError('Введите корректный адрес (улица и номер дома)');\r\n      return;\r\n    }\r\n\r\n    if (!newToilet.latitude || !newToilet.longitude) {\r\n      setAddressError('Не удалось определить координаты. Проверьте адрес');\r\n      return;\r\n    }\r\n\r\n    await onSubmit(newToilet);\r\n    resetForm();\r\n  }, [newToilet, onSubmit]);\r\n\r\n  const resetForm = useCallback(() => {\r\n    setNewToilet({\r\n      name: '',\r\n      address: '',\r\n      latitude: 0,\r\n      longitude: 0,\r\n      type: 'free',\r\n      price: '',\r\n      description: ''\r\n    });\r\n    setAddressError('');\r\n  }, []);\r\n\r\n  const handleHide = useCallback(() => {\r\n    resetForm();\r\n    onHide();\r\n  }, [resetForm, onHide]);\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleHide} size=\"lg\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Добавить новую точку</Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Modal.Body>\r\n          <Alert variant=\"info\">\r\n            <strong>Инструкция:</strong> Введите адрес в формате \"ул. Ленинский проспект 30\" или \"Кирова 15\". \r\n            Координаты определятся автоматически.\r\n          </Alert>\r\n          \r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Название *</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              required\r\n              value={newToilet.name}\r\n              onChange={(e) => setNewToilet(prev => ({ ...prev, name: e.target.value }))}\r\n              placeholder=\"Например: Туалет в ТЦ\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Адрес *</Form.Label>\r\n            <div className=\"position-relative\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                required\r\n                value={newToilet.address}\r\n                onChange={(e) => handleAddressChange(e.target.value)}\r\n                placeholder=\"Например: ул. Ленинский проспект 30\"\r\n                isInvalid={!!addressError}\r\n                disabled={geocodingLoading}\r\n              />\r\n              {geocodingLoading && (\r\n                <div className=\"position-absolute\" style={{ right: '10px', top: '8px' }}>\r\n                  <Spinner animation=\"border\" size=\"sm\" />\r\n                </div>\r\n              )}\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {addressError}\r\n              </Form.Control.Feedback>\r\n              <Form.Text className=\"text-muted\">\r\n                Укажите улицу и номер дома. Например: \"Кирова 15\" или \"ул. Ленина 30\"\r\n              </Form.Text>\r\n            </div>\r\n          </Form.Group>\r\n\r\n          {newToilet.latitude && newToilet.longitude && (\r\n            <Alert variant=\"success\" className=\"small\">\r\n              ✅ Координаты определены: {newToilet.latitude.toFixed(6)}, {newToilet.longitude.toFixed(6)}\r\n            </Alert>\r\n          )}\r\n\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Тип *</Form.Label>\r\n            <Form.Select\r\n              required\r\n              value={newToilet.type}\r\n              onChange={(e) => setNewToilet(prev => ({ \r\n                ...prev, \r\n                type: e.target.value as Toilet['type'] \r\n              }))}\r\n            >\r\n              <option value=\"free\">frei Бесплатный</option>\r\n              <option value=\"paid\">💰 Платный</option>\r\n              <option value=\"purchase_required\">🛒 Только за покупку</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n\r\n          {(newToilet.type === 'paid' || newToilet.type === 'purchase_required') && (\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Стоимость / Условия</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={newToilet.price}\r\n                onChange={(e) => setNewToilet(prev => ({ ...prev, price: e.target.value }))}\r\n                placeholder=\"Например: 50 рублей / Покупка от 100 рублей\"\r\n              />\r\n            </Form.Group>\r\n          )}\r\n\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Описание</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              value={newToilet.description}\r\n              onChange={(e) => setNewToilet(prev => ({ ...prev, description: e.target.value }))}\r\n              placeholder=\"Дополнительная информация (часы работы, доступность и т.д.)\"\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleHide}>\r\n            Отмена\r\n          </Button>\r\n          <Button \r\n            variant=\"primary\" \r\n            type=\"submit\" \r\n            disabled={loading || geocodingLoading || !newToilet.latitude || !!addressError}\r\n          >\r\n            {loading ? 'Отправка...' : 'Отправить на модерацию'}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nAddToiletModal.displayName = 'AddToiletModal';\r\n\r\nexport default AddToiletModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}